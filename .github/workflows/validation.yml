name: TestBench Validation

on:
  push:
    branches:
      - main
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  JAVA_VERSION: 17

jobs:
  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run formatter validation
        run: mvn formatter:validate --batch-mode --no-transfer-progress

  build-and-test:
    name: Build and Test
    needs: format-check
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Clean Maven cache (if needed)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "---> Clean maven cache"
          rm -rf ~/.m2/repository ~/.npm* ~/.pnpm*

      - name: Set up Sauce Labs tunnel
        if: env.SAUCE_USERNAME != '' && env.SAUCE_ACCESS_KEY != ''
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        run: |
          echo "Setting up Sauce Connect tunnel..."
          SAUCE_TUNNEL_ID="${{ github.run_id }}-${{ github.run_number }}"
          echo "SAUCE_TUNNEL_ID=${SAUCE_TUNNEL_ID}" >> $GITHUB_ENV

          # Download and start Sauce Connect 5.x
          SC_VERSION=5.2.3
          wget -q https://saucelabs.com/downloads/sauce-connect/5.2.3/sauce-connect-5.2.3_linux.x86_64.tar.gz -O - | tar -xzf -
          ./sc-5.2.3-linux/bin/sc \
            --username $SAUCE_USERNAME \
            --access-key $SAUCE_ACCESS_KEY \
            --tunnel-name ${SAUCE_TUNNEL_ID} \
            --no-remove-colliding-tunnels > sc.log 2>&1 &
          
          # Save PID for cleanup
          SC_PID=$!
          echo "SC_PID=${SC_PID}" >> $GITHUB_ENV

          # Wait for tunnel to be ready (look for the ready message)
          echo "Waiting for Sauce Connect to be ready..."
          for i in {1..60}; do
            if grep -q "Sauce Connect is up, you may start your tests" sc.log 2>/dev/null; then
              echo "Sauce Connect tunnel is ready!"
              break
            fi
            if ! kill -0 $SC_PID 2>/dev/null; then
              echo "Sauce Connect process died unexpectedly"
              cat sc.log
              exit 1
            fi
            echo "Waiting for Sauce Connect... ($i/60)"
            sleep 2
          done
          
          # Check if tunnel is actually ready
          if ! grep -q "Sauce Connect is up, you may start your tests" sc.log; then
            echo "Sauce Connect failed to start within 2 minutes"
            cat sc.log
            exit 1
          fi

      - name: Set TB License
        run: |
          TB_LICENSE=${{secrets.TB_LICENSE}}
          mkdir -p ~/.vaadin/
          echo '{"username":"'`echo $TB_LICENSE | cut -d / -f1`'","proKey":"'`echo $TB_LICENSE | cut -d / -f2`'"}' > ~/.vaadin/proKey

      - name: Build with Maven
        run: |
          mvn clean install -DskipTests -B

      - name: Run Tests and Generate Javadoc
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        run: |
          mvn javadoc:javadoc verify \
            -P verify-only-phantom,validation \
            -Dtestbench.javadocs \
            -Dsystem.com.vaadin.testbench.Parameters.testsInParallel=5 \
            -Dsystem.com.vaadin.testbench.Parameters.maxAttempts=2 \
            -Dcom.vaadin.testbench.Parameters.hubHostname=localhost \
            -Dsauce.tunnelId=${SAUCE_TUNNEL_ID:-} \
            -Dfailsafe.forkCount=5 \
            -Dsystem.sauce.user=${SAUCE_USERNAME:-} \
            -Dsystem.sauce.sauceAccessKey=${SAUCE_ACCESS_KEY:-} \
            -B

      - name: Stop Sauce Labs tunnel
        if: always() && env.SAUCE_USERNAME != '' && env.SAUCE_ACCESS_KEY != ''
        run: |
          echo "Stopping Sauce Connect tunnel..."
          if [ -n "${SC_PID}" ]; then
            kill ${SC_PID} || true
            wait ${SC_PID} 2>/dev/null || true
          fi
          # Also try pkill as fallback
          pkill -f "sc.*--tunnel-name" || true
          
          # Show final logs for debugging
          if [ -f sc.log ]; then
            echo "=== Sauce Connect final logs ==="
            tail -20 sc.log
          fi

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ github.run_id }}
          path: |
            vaadin-testbench-integration-tests/error-screenshots/
            testbench-integration-tests/error-screenshots/
            vaadin-testbench-integration-tests-junit5/error-screenshots/
            **/target/surefire-reports/
            **/target/failsafe-reports/
            sc.log
          retention-days: 7

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_id }}
          path: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml
          retention-days: 7

      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml
          check_name: Test Results
          comment_mode: failures
